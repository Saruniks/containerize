job "nomadrepo" {
    datacenters = ["dc1"]

    group "db" {
        network {
            mode = "bridge"
        }
        
        service {
            name = "nomadrepodb"
            port = "5432"
            
            connect {
            sidecar_service {}
            }
        }
        
        task "postgres" {
            driver = "docker"
            config {
                image = "postgres:13"
            }
            
            env {
                POSTGRES_PASSWORD="'<TODO: Insert DB password here'>"
            }
            
            resources {
                cpu 	= 200
                memory  = 200
            }
        }

        task "initdb" {
            lifecycle {
               hook = "poststart"
               sidecar = false
            }

            driver = "docker"
            config {
                image   = "schmichael/nomadrepo:0.5"
                command = "/bin/bash"
                args    = ["-c", "chmod +x local/initdb.sh && exec local/initdb.sh"]
            }
            template {
                data = <<EOH
#!/bin/sh

echo "--> Waiting for envoy to start..."
sleep 15
# Use alloc index as jitter
sleep {{ env "NOMAD_ALLOC_INDEX" }}

echo "--> Initializing database..."
PGPASSWORD=<'TODO: Insert DB password here'> psql -h localhost -U postgres -c 'CREATE DATABASE voting;' || echo "Error code: $?"
echo "==> Database initialized."
echo "--> Migrating database..."
# . /opt/venv/bin/activate && python nomadrepo/manage.py migrate || echo "Error code: $?"
echo "==> Migrated database."

EOH
                destination   = "local/initdb.sh"
                change_mode   = "noop"
            }
            resources {
                cpu    =  200
                memory =  200
            }
        }

        task "diesel-migration" {
            lifecycle {
               hook = "poststart"
               sidecar = false
            }

            driver = "docker"
            config {
                image   = "sarunasgincas/db-sync-test:tagname"
            }

            env {
                RUST_LOG="db-sync=debug"
                RUST_BACKTRACE="1"
                DBSYNC_DATABASE="postgres://postgres:<'TODO: Insert DB password here'>@localhost/voting"
            }

            resources {
                cpu    =  200
                memory =  200
            }
        }
    }
}
